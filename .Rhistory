pollutantmean("specdata","nitrate")
source("pollutantmean.R")
pollutantmean("specdata","nitrate")
?list
source("pollutantmean.R")
pollutantmean("specdata","nitrate",5:10)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",5:10)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",5:10)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",5:10)
source("complete.R")
source("complete.R")
source("complete.R")
source("pollutantmean.R")
complete("specdata",5:10)
source("complete.R")
complete("specdata",5:10)
data = read.csv("specdata/005.csv")
head(data,15)
is.na(head(data,15))
source("complete.R")
complete("specdata",5:10)
complete("specdata",5)
complete("specdata",5:5)
source("complete.R")
source("complete.R")
complete("specdata",5:5)
?cbind
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
complete("specdata",5)
complete("specdata",5:6)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
complete("specdata",5:22)
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:22)
?corr
?cor
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
?rbins
?rbind
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
?na.omit
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
?cor
cr <- corr("specdata",100)
complete(cr)
summary(cr)
head(cr)
source("corr.R")
corr("specdata",100)
?summary
?vector
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
summary(cr)
?summary
corr("specdata",150)
summary(cr)
cr <- corr("specdata",100)
summary(cr)
corr("specdata",150)
corr("specdata",100)
summary(cr)
corr("specdata",5000)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
corr("specdata")
cr <- corr("specdata",150)
length(cr)
complete("specdata")
cr <- corr("specdata")
length(cr)
source("corr.R")
cr <- corr("specdata")
length(cr)
summary(cr)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source("pollutantmean.R")
pollutantmean("specdata","sulfate")
swirl()
library("swirl.R")
library(swirl)
swirl()
install_from_swirl("Regression_Models")
install_from_swirl("Data_Analysis")
install_from_swirl("Exploratory_Data_Analysis")
install_from_swirl("Getting_and_Cleaning_Data")
install_from_swirl("Statistical_Inference")
swirl()
Sys.Date()
mean(c(2.4.5))
mean(c(2,4,5))
submit()
boring_function('My
| first function!')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
telegram("Good", "morning")
telegram
submit()
telegram
telegram("Good", "morning")
submit()
submit()
mad_libs("KL","big","cake")
play()
mad_libs(place="KL","adjective=big",noun="cake")
mad_libs(place="KL",adjective="big",noun="cake")
nxt()
library(datasets)
data(iris)
?iris
iris
dim(iris)
iris(5,5)
head(iris)
?head
head(iris,20)
iris[['Sepal.Width']]
iris$Sepal.Width
mean(iris$Sepal.Length)
colMeans
?colMeans
colMeans(iris)
sapply(iris,class)
?apply
data(mtcars)
head(mtcars)
?tapply
?sapply
?with
?tapply
tapply(mtcars$hp,mtcars$cyl,mean)
?abs
x <- tapply(mtcars$hp,mtcars$cyl,mean)
class(x)
dim(x)
x[1]
abs(x[1]-x[3])
debug(ls)
ls
?ls
ls()
tapply(iris$Sepal.Length,iris$Species,mean)
head(iris)
class(iris)
iris[['Species']]
iris[[Species='virginica']]
iris[Species='virginica']
iris[iris$Species]
iris[iris$Species="virginica"]
head(iris)
?subset
subset(iris,Species=virginica)
subset(iris,Species="virginica")
subset(iris,Species=="virginica")
iris[iris$Species=="virginica"]
iris[iris$Species=="virginica",]
tapply(iris,Species,mean)
tapply(iris,iris$Species,mean)
?tapply
tapply(iris$Sepal.Length,iris$Species,mean)
head(mtcars)
x <- tapply(mtcars$hp,mtcars$cyl,mean)
x
abs(x[1]-x[3])
getwd()
?setwd
setwd("/Users/kwokmun/ProgrammingAssignment2")
getwd()
ls
getwd()
?ls
source("cacheMatrix.R")
?solve
?matrix
m = matrix(5:13,3,3)
m
solve(m)
?solve
m = matrix(22:25,2,2)
m
solve(m)
mi <- solve(m)
m*mi
solve(mi)
m %*% mi
n <- = matrix(5:13,3,3)
n <- matrix(5:13,3,3)
n
solve(n)
n <- matrix(1:9,3,3)
solve(n)
n <- matrix(c(1,0,5,2,1,6,3,5,0),3,3)
n
solve(n)
source("cacheMatrix.R")
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(n))
class(cacheSolve(makeCacheMatrix(n)))
class(cacheSolve(makeCacheMatrix(n)))
cacheSolve(makeCacheMatrix(n))
?is.identical
cacheSolve(makeCacheMatrix(n))
?return
cache <- makeCacheMatrix(n)
sol <- cacheSolve(cache)
sol
sol
source("cacheMatrix.R")
cache <- makeCacheMatrix(n)
n
cache <- makeCacheMatrix(n)
cache$get
cache$get()
source("cacheMatrix.R")
sol <- cacheSolve(cache)
cache <- makeCacheMatrix(n)
View(m)
View(iris)
View(mi)
